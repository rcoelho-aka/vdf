pipeline {
    agent any

    stages {
        stage ('Setup & Clone Repository') {
            steps {
                script {
                    env.APP_NAME = "vdf-antonio-santos"
                    env.DOCKER_TAG = "registry.heroku.com/${env.APP_NAME}/web"                                        
                }
            //git branch: "antonio-santos", url: 'https://github.com/rcoelho-aka/vdf'
            checkout scm            
            }
        }
        stage ('Maven PAckage & test') {
            steps {
                sh "mvn clean package"
                junit '**/target/surefire-reports/TEST-*.xml'
                archiveArtifacts 'target/*.jar'
            }        
        }
        stage ("Sonacloud"){
            steps{
                script{
                    withCredentials([string(credentialsId: 'sonarcloud-key', variable: 'SONAR_TOKEN')]) {                        
                    sh "mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.branch.name=$GIT_BRANCH" 
                    }
                }
            }
        }
        stage ('Docker Build') {
            steps {
                sh "docker build -t ${env.DOCKER_TAG} ." 
            }
        }
        stage ('Heroku') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'heroku-key', variable: 'HEROKU_API_KEY')]) {
                        sh "echo $HEROKU_API_KEY"
                        sh "heroku container:login"
                    }
                }
            }
        }
        stage ('push docker') {
            steps {
                sh "docker push ${env.DOCKER_TAG}"
            }
        }
        stage ('Input') {
            when {
                not {
                    triggeredBy ("SCMTrigger")
                }
            }
            steps {
                input message: 'Queres fazer deploy?', ok: 'Aprovar'
            }
        }
        stage ('Deploying if Manual') {
            when {
                not {
                    triggeredBy ("SCMTrigger")
                }
            }
            steps {
                script {
                    withCredentials([string(credentialsId: 'heroku-key', variable: 'HEROKU_API_KEY')]) {
                        sh "heroku container:login"
                        sh "heroku container:release web -a ${env.APP_NAME}" 
                    }
                }
            }
        }

    }
}
